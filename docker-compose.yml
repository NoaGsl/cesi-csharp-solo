version: '3.8'

services:
  backend:
    container_name: api
    build:
      context: ./Backend/backend-cube-solo
      dockerfile: Dockerfile
    ports:
      - "7213:7213"
    environment:
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_CONNECTION_STRING: ${DATABASE_CONNECTION_STRING}
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      API_URL: ${API_URL}
      NEXT_PUBLIC_ADMIN_SEQUENCE: ${NEXT_PUBLIC_ADMIN_SEQUENCE}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: postgres:13-alpine
    container_name: my-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./DB/Scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: my-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
